rd_("BjGet a flags value with all known bits set.BgCreate a new computation graph builder.CgCreate a new computation graph from the given metadata.DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6DhBoth <code>text_to_image</code> and <code>image_to_image</code> contextsAnGet the underlying bits value.ClProcesses a chat-completion request and returns either a \xe2\x80\xa60AoReturns the argument unchanged.000000000000000BcDefine metadata for the ggml model.BaCalls <code>U::from(self)</code>.000000000000000BfYield a set of contained flags values.AiGet the name of the modelCjWrapper of the <code>wasmedge_wasi_nn::Graph</code> structAjGet the alias of the modelD`The bitwise or (<code>|</code>) of the bits in two flags values.BfGet a flags value with all bits unset.BgError types for the Llama Core library.B`Define APIs for file operations.CiDefine Graph and GraphBuilder APIs for creating a new \xe2\x80\xa6B`Path to the image file for llavaBdDefine metadata for the piper model.DkThe speed of the generated audio. Select a value from <code>0.25</code> \xe2\x80\xa6CeTop-p sampling. Between 0.0 and 1.0. Defaults to 0.9.8AiDefine utility functions.DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in each flags value.BjDefine APIs for image generation and edit.=CcWhether all known bits in this flags value are set.Bopath to the multimodal projector file for llavaB`Define APIs for querying models.AfLists models availableCkText to guide the model. The max length is n_text_ctx/2 \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa68CeErrors thrown by the wasi-nn-ggml plugin and runtime.AnErrors in the model inference.BjCompute the inference on the given inputs.CmBNF-like grammar to constrain generations (see samples in \xe2\x80\xa6CdMaximum segment length in characters. Defaults to 0.CkVariation in phoneme lengths. Defaults to <code>0.8</code>.CkNumber of threads to use during computation. Defaults to 4.CjNumber of threads to use during generation. Defaults to 2.BfDefine metadata for the whisper model.BcErrors in setting the input tensor.CmWhether all set bits in a source flags value are also set \xe2\x80\xa6CjSize of the prompt context. 0 means loaded from model. \xe2\x80\xa6CmDuration of audio to process in milliseconds. Defaults to \xe2\x80\xa6BoWhether all bits in this flags value are unset.DjThe language of the input audio. <code>auto</code> for auto-detection. \xe2\x80\xa6BfThe main GPU to use. Defaults to None.BdDefine the types for model metadata.CnWhether to use memory-mapped files for the model. Defaults \xe2\x80\xa6BdErrors in getting the output tensor.AlErrors in General operation.BeEnable debug mode. Defaults to false.BiGet the dimension of the embedding model.AjConvert from a bits value.D`The bitwise or (<code>|</code>) of the bits in each flags value.ClGet a flags value with the bits of a flag with the given \xe2\x80\xa6CjNumber of tokens to predict, -1 = infinity, -2 = until \xe2\x80\xa6B`Define APIs for chat completion.ClSet input uses the data, not only u8, but also f32, i32, \xe2\x80\xa6CjTranslate from source language to english. Defaults to \xe2\x80\xa6kEngine typeDgVersion info of the <code>wasi-nn_ggml</code> plugin, including the \xe2\x80\xa6BmLogical maximum batch size. Defaults to 2048.CkGenerate a list of chunks from a given text. Each chunk \xe2\x80\xa6DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6BeDefine APIs for computing embeddings.BgCompute embeddings for the given input.CkCopy output tensor to out_buffer, return the output\xe2\x80\x99s \xe2\x80\xa6CnCreate an edited or extended image given an original image \xe2\x80\xa6CmWhether any set bits in a source flags value are also set \xe2\x80\xa6BlYield a set of contained named flags values.Ckstdin input is lines of JSON instead of plain text. The \xe2\x80\xa6BiList all files in the archives directory.DhLlama Core, abbreviated as <code>llama-core</code>, defines a set of \xe2\x80\xa6BoOutput result in a CSV file. Defaults to false.BoOutput result in a lrc file. Defaults to false.BoOutput result in a srt file. Defaults to false.C`Output result in a text file. Defaults to false.BoOutput result in a vtt file. Defaults to false.ClNumber of processors to use during computation. Defaults \xe2\x80\xa6BjId of speaker. Defaults to <code>0</code>.CiHow to split the model across multiple GPUs. Possible \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6BaErrors in Context initialization.Bb<code>text_to_image</code> contextAlDefine APIs for completions.CeGiven a prompt, the model will return one or more \xe2\x80\xa6BiJSON schema to constrain generations (\xe2\x80\xa6ClMaximum number of text context tokens to store. Defaults \xe2\x80\xa6ClAmount of noise to add during audio generation. Defaults \xe2\x80\xa6BkTime offset in milliseconds. Defaults to 0.C`Output result in a JSON file. Defaults to false.AmRemove the target file by id.ChSampling temperature, between 0 and 1. Defaults to 0.00.ClAdjust the randomness of the generated text. Between 0.0 \xe2\x80\xa6BmPhysical maximum batch size. Defaults to 512.CjThe directory for storing the archives in wasm virtual \xe2\x80\xa6AoError types for wasi-nn errors.AcBase metadata traitAiErrors in file not found.ChErrors in cleaning up the computation context in the \xe2\x80\xa6BgMetadata for chat and embeddings modelsBmBuilder for creating a new computation graph.Bc<code>image_to_image</code> contextD`The bitwise or (<code>|</code>) of the bits in two flags values.DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.B`Return the current running mode.ClHow split tensors should be distributed accross GPUs. If \xe2\x80\xa6CaErrors in the model inference in the stream mode.73DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6BcGenerate audio from the input text.0AoDownload a specific file by id.AnClear the computation context.CmWhether to include usage in the stream response. Defaults \xe2\x80\xa6CaRetrieve information about a specific file by id.CfSplit on word rather than on token. Defaults to false.BgError types for the Llama Core library.BjCompute the inference on the given inputs.CdPenalize repeat sequence of tokens. Defaults to 1.0.ClHalt generation at PROMPT, return control in interactive \xe2\x80\xa6CgErrors in getting the output tensor in the stream mode.AgMetadata for TTS modelsAjMetadata for whisper modelClAutomatically detect the spoken language in the provided \xe2\x80\xa6AcGet the plugin infoBdCreate a variation of a given image.oUpdate metadataB`Define APIs for chat completion.BdReturn the names of the chat models.BbConvert from a bits value exactly.AoCreate an image given a prompt.BoRepeat alpha presence penalty. Defaults to 0.0.DeSeconds of silence after each sentence. Defaults to <code>0.2</code>.C`Repeat alpha frequency penalty. Defaults to 0.0.CkCopy output tensor to out_buffer, return the output\xe2\x80\x99s \xe2\x80\xa6BhTranslate audio into the target languageCfConvert from a bits value, unsetting any unknown bits.AlInitialize the piper contextBdBuilder for creating a ggml metadataBmThe task type of the stable diffusion contextBbThe sample rate of the audio input2BiTranscribe audio into the input language.CjGet the chat prompt template type from the given model \xe2\x80\xa6AnInitialize the whisper contextDfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6BiReturn the names of the embedding models.BnInitialize the ggml context for TTS scenarios.BnRetrieve the content of a specific file by id.BhBuilder for creating a ggml tts metadataBfBuilder for creating an audio metadataAkInitialize the ggml context0CjInitialize the stable-diffusion context with the given \xe2\x80\xa60")