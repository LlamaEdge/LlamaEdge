name: CI

on:
  workflow_dispatch: # manual trigger release
    inputs:
      create_release:
        description: 'Create new release'
        required: true
        type: boolean
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - '**/Cargo.toml'
      - '**/*.rs'
      - '**/*.sh'
      - '**/*.wasm'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '.github/workflows/**'
      - '**/Cargo.toml'
      - '**/*.rs'
      - '**/*.sh'
      - '**/*.wasm'

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        id: checkout
        uses: actions/checkout@v3

      - name: Setup rustup
        id: rustup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-wasi

      - name: Build simple
        id: build_simple
        run: |
          cd simple
          cargo build --target wasm32-wasi --release
          cp ./target/wasm32-wasi/release/llama-simple.wasm ../llama-simple.wasm

      - name: Build chat
        id: build_chat
        run: |
          cd chat
          cargo build --target wasm32-wasi --release
          cp ./target/wasm32-wasi/release/llama-chat.wasm ../llama-chat.wasm

      - name: Build api-server
        id: build_api_server
        run: |
          cd api-server
          cargo build --target wasm32-wasi --release
          cp ./target/wasm32-wasi/release/llama-api-server.wasm ../llama-api-server.wasm

      - name: Calculate checksum
        id: checksum
        run: |
          sha256sum *.wasm > SHA256SUM

          echo "Debug info(SHA256SUM):"
          cat SHA256SUM

      - name: Count revision
        id: revision
        shell: bash
        run: |
          REVISION="$(git rev-list --count HEAD)"
          ((REVISION=REVISION-313+1001))
          HASH="$(git rev-parse --short=8 HEAD)"
          if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
            echo "name=b${REVISION}" >> $GITHUB_OUTPUT
            echo "b${REVISION}" >> VERSION
          else
            echo "name=PR-b${REVISION}-${HASH}" >> $GITHUB_OUTPUT
            echo "PR-b${REVISION}-${HASH}" >> VERSION
          fi

          echo "Debug info(VERSION):"
          cat VERSION

      - name: Upload artifacts
        if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event.inputs.create_release == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          path: |
            llama-simple.wasm
            llama-chat.wasm
            llama-api-server.wasm
            VERSION
            SHA256SUM

  release:
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event.inputs.create_release == 'true' }}

    runs-on: ubuntu-latest

    needs:
      - build-wasm

    steps:
      - name: Clone project
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Count revision
        id: revision
        shell: bash
        run: |
          REVISION="$(git rev-list --count HEAD)"
          ((REVISION=REVISION-313+1001))
          HASH="$(git rev-parse --short=8 HEAD)"
          if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
            echo "name=b${REVISION}" >> $GITHUB_OUTPUT
            echo "b${REVISION}" >> VERSION
          else
            echo "name=PR-b${REVISION}-${HASH}" >> $GITHUB_OUTPUT
            echo "PR-b${REVISION}-${HASH}" >> VERSION
          fi

      - name: Download artifacts
        id: download-artifact
        uses: actions/download-artifact@v3

      - name: Create release
        id: create_release
        uses: anzz1/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.revision.outputs.name }}

      - name: Upload release
        id: upload_release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const path = require('path');
            const fs = require('fs');
            const release_id = '${{ steps.create_release.outputs.id }}';
            for (let file of await fs.readdirSync('./artifact')) {
              if (path.extname(file) === '.wasm'
              | path.basename(file) === 'VERSION'
              | path.basename(file) === 'SHA256SUM') {
                console.log('uploadReleaseAsset', file);
                await github.repos.uploadReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: release_id,
                  name: file,
                  data: await fs.readFileSync(`./artifact/${file}`)
                });
              }
            }
